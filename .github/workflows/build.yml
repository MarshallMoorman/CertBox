name: Build and Release CertBox

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read  # Default for build jobs

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - runtime: win-x64
            artifact-suffix: win-x64
          - runtime: win-arm64
            artifact-suffix: win-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.100'

      - name: Restore dependencies
        run: dotnet restore CertBox.sln

      - name: Build solution
        run: dotnet build CertBox.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CertBox.sln --configuration Release --no-build --verbosity normal

      - name: Publish CertBox (with trimming disabled)
        run: dotnet publish src/CertBox/CertBox.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=false -p:DebugType=None -o ./publish/${{ matrix.runtime }}

      - name: Zip artifact
        shell: powershell
        run: |
          Compress-Archive -Path ./publish/${{ matrix.runtime }}/* -DestinationPath ./CertBox-${{ matrix.artifact-suffix }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}
          path: ./CertBox-${{ matrix.artifact-suffix }}.zip
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - runtime: linux-x64
            artifact-suffix: linux-x64
          - runtime: linux-arm64
            artifact-suffix: linux-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.100'

      - name: Restore dependencies
        run: dotnet restore CertBox.sln

      - name: Build solution
        run: dotnet build CertBox.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CertBox.sln --configuration Release --no-build --verbosity normal

      - name: Publish CertBox (with trimming disabled)
        run: dotnet publish src/CertBox/CertBox.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=false -p:DebugType=None -o ./publish/${{ matrix.runtime }}

      - name: Zip artifact
        run: |
          cd ./publish/${{ matrix.runtime }}
          zip -r ../../CertBox-${{ matrix.artifact-suffix }}.zip .
          cd ../..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}
          path: ./CertBox-${{ matrix.artifact-suffix }}.zip
          if-no-files-found: error

  build-macos-arm64:
    runs-on: macos-latest
    strategy:
      matrix:
        runtime: [osx-arm64]
        artifact-suffix: [macos-arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.100'

      - name: Restore dependencies
        run: dotnet restore CertBox.sln

      - name: Build solution
        run: dotnet build CertBox.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CertBox.sln --configuration Release --no-build --verbosity normal

      - name: Publish CertBox (with trimming disabled)
        run: dotnet publish src/CertBox/CertBox.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=false -p:DebugType=None -o ./publish/${{ matrix.runtime }}

      - name: Create macOS .app bundle
        run: |
          mkdir -p ./publish/CertBox.app/Contents/MacOS
          mkdir -p ./publish/CertBox.app/Contents/Resources
          cp -r ./publish/${{ matrix.runtime }}/* ./publish/CertBox.app/Contents/MacOS/
          cp src/CertBox/Assets/certbox.icns ./publish/CertBox.app/Contents/Resources/CertBox.icns
          cat <<EOF > ./publish/CertBox.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>CertBox</string>
            <key>CFBundleIdentifier</key>
            <string>com.marshallmoorman.certbox</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleExecutable</key>
            <string>CertBox</string>
            <key>CFBundleIconFile</key>
            <string>CertBox.icns</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
          </dict>
          </plist>
          EOF

      - name: Zip macOS raw artifact
        run: |
          cd ./publish/${{ matrix.runtime }}
          zip -r ../../CertBox-${{ matrix.artifact-suffix }}.zip .
          cd ../..

      - name: Upload macOS raw artifact
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}
          path: ./CertBox-${{ matrix.artifact-suffix }}.zip
          if-no-files-found: error

      - name: Zip macOS .app bundle
        run: |
          cd ./publish
          zip -r CertBox-${{ matrix.artifact-suffix }}.app.zip CertBox.app
          mv CertBox-${{ matrix.artifact-suffix }}.app.zip ../

      - name: Upload macOS .app bundle as separate artifact
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}-app
          path: ./CertBox-${{ matrix.artifact-suffix }}.app.zip
          if-no-files-found: error

  build-macos-x64:
    runs-on: macos-latest
    strategy:
      matrix:
        runtime: [osx-x64]
        artifact-suffix: [macos-x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.100'

      - name: Restore dependencies
        run: dotnet restore CertBox.sln

      - name: Build solution
        run: dotnet build CertBox.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CertBox.sln --configuration Release --no-build --verbosity normal

      - name: Publish CertBox (with trimming disabled)
        run: dotnet publish src/CertBox/CertBox.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=false -p:DebugType=None -o ./publish/${{ matrix.runtime }}

      - name: Create macOS .app bundle
        run: |
          mkdir -p ./publish/CertBox.app/Contents/MacOS
          mkdir -p ./publish/CertBox.app/Contents/Resources
          cp -r ./publish/${{ matrix.runtime }}/* ./publish/CertBox.app/Contents/MacOS/
          cp src/CertBox/Assets/certbox.icns ./publish/CertBox.app/Contents/Resources/CertBox.icns
          cat <<EOF > ./publish/CertBox.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>CertBox</string>
            <key>CFBundleIdentifier</key>
            <string>com.marshallmoorman.certbox</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleExecutable</key>
            <string>CertBox</string>
            <key>CFBundleIconFile</key>
            <string>CertBox.icns</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
          </dict>
          </plist>
          EOF

      - name: Zip macOS raw artifact
        run: |
          cd ./publish/${{ matrix.runtime }}
          zip -r ../../CertBox-${{ matrix.artifact-suffix }}.zip .
          cd ../..

      - name: Upload macOS raw artifact
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}
          path: ./CertBox-${{ matrix.artifact-suffix }}.zip
          if-no-files-found: error

      - name: Zip macOS .app bundle
        run: |
          cd ./publish
          zip -r CertBox-${{ matrix.artifact-suffix }}.app.zip CertBox.app
          mv CertBox-${{ matrix.artifact-suffix }}.app.zip ../

      - name: Upload macOS .app bundle as separate artifact
        uses: actions/upload-artifact@v4
        with:
          name: CertBox-${{ matrix.artifact-suffix }}-app
          path: ./CertBox-${{ matrix.artifact-suffix }}.app.zip
          if-no-files-found: error

  release:
    needs: [build-windows, build-linux, build-macos-arm64, build-macos-x64]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant write permissions for release job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get release count
        id: release_count
        run: |
          RELEASE_COUNT=$(gh api repos/MarshallMoorman/CertBox/releases --jq 'length')
          NEXT_RELEASE=$((RELEASE_COUNT + 1))
          echo "release_number=$NEXT_RELEASE" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.release_count.outputs.release_number }}
          name: CertBox Release v${{ steps.release_count.outputs.release_number }}
          draft: false
          prerelease: false
          files: |
            artifacts/CertBox-win-x64/CertBox-win-x64.zip
            artifacts/CertBox-win-arm64/CertBox-win-arm64.zip
            artifacts/CertBox-linux-x64/CertBox-linux-x64.zip
            artifacts/CertBox-linux-arm64/CertBox-linux-arm64.zip
            artifacts/CertBox-macos-arm64/CertBox-macos-arm64.zip
            artifacts/CertBox-macos-x64/CertBox-macos-x64.zip
            artifacts/CertBox-macos-arm64-app/CertBox-macos-arm64.app.zip
            artifacts/CertBox-macos-x64-app/CertBox-macos-x64.app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}